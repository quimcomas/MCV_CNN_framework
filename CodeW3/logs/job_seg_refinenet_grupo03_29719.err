/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/modules/upsampling.py:122: UserWarning: nn.Upsampling is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.Upsampling is deprecated. Use nn.functional.interpolate instead.")
/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/modules/loss.py:206: UserWarning: NLLLoss2d has been deprecated. Please use NLLLoss instead as a drop-in replacement and see http://pytorch.org/docs/master/nn.html#torch.nn.NLLLoss for more details.
  warnings.warn("NLLLoss2d has been deprecated. "
/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/functional.py:52: UserWarning: size_average and reduce args will be deprecated, please use reduction='elementwise_mean' instead.
  warnings.warn(warning.format(ret))
/home/grupo03/M5/Code/models/loss/segmentation/crossEntropyLoss2d.py:37: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  loss = loss_fn_(F.log_softmax(inputs), targets)
Traceback (most recent call last):
  File "main.py", line 98, in <module>
    main()
  File "main.py", line 49, in main
    dataloader.loader_set, dataloader.loader)
  File "/home/grupo03/M5/Code/tasks/simple_trainer_manager.py", line 85, in start
    self.training_loop(epoch, train_loader, epoch_bar)
  File "/home/grupo03/M5/Code/tasks/simple_trainer_manager.py", line 133, in training_loop
    self.compute_gradients()
  File "/home/grupo03/M5/Code/tasks/simple_trainer_manager.py", line 167, in compute_gradients
    self.loss = self.model.loss(self.outputs, self.labels)
  File "/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/modules/module.py", line 477, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/grupo03/M5/Code/models/loss/segmentation/crossEntropyLoss2d.py", line 37, in forward
    loss = loss_fn_(F.log_softmax(inputs), targets)
  File "/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/modules/module.py", line 477, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/modules/loss.py", line 200, in forward
    return F.nll_loss(input, target, weight=self.weight, ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/grupo03/anaconda3/lib/python2.7/site-packages/torch/nn/functional.py", line 1409, in nll_loss
    return torch._C._nn.nll_loss2d(input, target, weight, _Reduction.get_enum(reduction), ignore_index)
RuntimeError: input and target batch or spatial sizes don't match: target [1 x 360 x 480], input [1 x 11 x 90 x 120] at /opt/conda/conda-bld/pytorch_1535488076166/work/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu:23
